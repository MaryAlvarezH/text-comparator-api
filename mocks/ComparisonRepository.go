// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ComparisonRepository is an autogenerated mock type for the ComparisonRepository type
type ComparisonRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: value
func (_m *ComparisonRepository) Create(value interface{}) error {
	ret := _m.Called(value)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindInOrder provides a mock function with given fields: out, order, where
func (_m *ComparisonRepository) FindInOrder(out interface{}, order string, where ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, out, order)
	_ca = append(_ca, where...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, string, ...interface{}) error); ok {
		r0 = rf(out, order, where...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// First provides a mock function with given fields: out, conditions
func (_m *ComparisonRepository) First(out interface{}, conditions ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, out)
	_ca = append(_ca, conditions...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, ...interface{}) error); ok {
		r0 = rf(out, conditions...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewComparisonRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewComparisonRepository creates a new instance of ComparisonRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewComparisonRepository(t mockConstructorTestingTNewComparisonRepository) *ComparisonRepository {
	mock := &ComparisonRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
